*kiwi.nvim*====================================================================
Kiwi, the lean personal wiki for Neovim!
                         ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀⣀⣤⣤⣤⣤⣤⣤⣄⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
                         ⠀⠀⠀⠀⠀⠀⢀⣤⣴⡶⣿⣯⣿⣿⣿⣿⣶⣿⢿⣿⣷⣿⣿⣟⣳⢖⠒⠋⠉⠙⠐⠒⠲⠦⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
                         ⠀⠀⠀⢀⣠⣶⣿⣿⣿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⣁⠾⠁⠀⠉⠒⣄⠀⠀⠀⠀⡀⠀⠈⠑⠢⣄⠀⠀⠀⠀⠀⠀⠀⠀
                         ⠀⢀⣴⣿⡟⣿⠟⡛⣬⡿⣻⢋⢿⣿⣿⣿⣿⣿⣿⣿⣟⢠⡓⡀⠀⠀⠀⠀⢀⣲⣤⣄⡀⠹⣣⡀⢠⡀⠈⠑⢦⡀⠀⠀⠀⠀⠀
                         ⢀⣾⢿⣿⢩⠯⢮⡶⢏⣸⣍⢷⣟⢾⣿⣿⣿⣿⣿⠯⡀⠸⡆⠨⣝⣒⣦⣄⣈⣿⢿⠝⠿⣷⣿⣷⣾⣸⣠⡄⠀⠙⢦⡀⠀⠀⠀
                         ⡾⠁⣿⣸⣼⡷⣼⠅⣰⣗⡨⣟⢒⠿⣿⣿⣿⣿⣿⡀⠀⠀⢳⠀⠀⠨⢭⣿⣿⣿⡛⠃⠀⠀⠉⠀⠉⢻⣿⣶⡛⠉⠀⠑⡄⠀⠀
                         ⡇⣴⣿⣿⣿⣷⣿⡿⢗⡫⣿⣞⢑⣼⣿⣿⣿⣿⢒⠁⡄⠀⠈⢳⡀⠀⠸⠿⣿⣿⠯⠄⠀⠀⠀⠀⠀⠀⢙⣿⡽⡭⠀⠀⠘⢆⠀
                         ⢧⣾⣿⣿⣿⣿⣿⢣⠉⠘⠋⢼⣾⣿⣿⣿⣿⣉⠀⡞⠀⠀⠀⠀⠙⢦⡀⠀⠹⢿⣷⣦⣧⣸⣤⣤⣤⣔⢶⠿⠻⠎⠓⡂⠀⠘⡄
                         ⠈⣿⣿⣿⣿⢿⡇⣜⠀⢧⢼⣿⣿⣿⣿⣿⣿⠠⣿⠀⠀⠐⢀⠀⠀⠈⢙⢦⠀⠘⠋⡟⠻⣼⣿⢿⣿⣿⣗⠀⠀⠀⠀⠀⠀⠀⡇
                         ⠀⠘⣿⡟⡅⠈⢀⡀⣻⣾⣿⣿⣿⣿⣿⣿⣿⢘⠧⡗⠀⠙⠲⡀⠀⠀⠈⠉⠳⣄⡀⠀⠀⠘⠘⠀⠓⠁⠀⠀⠀⠀⠀⠀⠀⢸⠇
                         ⠀⠀⠘⢷⣼⠡⣾⠿⣞⡿⣭⣿⣽⣿⣿⣿⣿⡍⠉⣹⡺⢦⡀⣗⣠⡈⠇⠠⡠⢬⣙⡲⡶⡤⢤⣤⡀⠀⠀⠀⠀⠀⢀⣤⣿⡟⠀
                         ⠀⠀⠀⠈⠛⢷⣿⣿⣽⣷⣿⣿⣿⣿⣿⣿⣿⣷⡀⢽⢶⣳⣿⣿⣷⣦⣶⡦⣩⠷⣽⣯⣿⣲⢤⣁⣸⢻⣞⢓⣴⣿⢿⣣⠏⠀⠀
                         ⠀⠀⠀⠀⠀⠀⠈⠙⠛⠿⠿⠿⣿⣿⣿⣿⣿⣿⣷⣄⣤⣳⣿⣷⣿⣿⣿⣿⣿⣮⣿⣿⣿⣿⣿⣿⣯⣿⣿⡿⣧⡠⠟⠁⠀⠀⠀
https://github.com/serenevoid/kiwi.nvim/⠀⠀⠀⠀⠉⠛⠿⣿⣿⣿⣷⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣭⣾⠿⠋⠀⠀⠀⠀⠀⠀
                         ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠻⠿⢿⣿⣿⣿⣿⣿⣿⣿⡿⠿⠛⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀


=============================================================================

kiwi.nvim		for Neovim >= 0.7	      last change: 2024-02-25

Contents
--------
- Introduction			                |kiwi.nvim-introduction|
- Features  				        |kiwi.nvim-features|
- Usage 					|kiwi.nvim-usage|
- Settings and configuration     	 	|kiwi.nvim-settings|
- Keymappings 	  				|kiwi.nvim-keys|
- Installation  		                |kiwi.nvim-installation|


=============================================================================
Introduction					      *kiwi.nvim-introduction*

kiwi.nvim is a personal wiki for Neovim. A wiki is a collection of text
documents linked together. kiwi.nvim documents are formatted in markdown
syntax. 

kiwi.nvim is a new project which aims to be a minimal wiki plugin that doesn't
add features that many users will not use. If you want additional
functionality for your personal wiki, you can install other specialised
plugins to provide functions like syntax highlighting or autosave. You can
also create personal keymappings and personal functions to make your wiki
truly personal.

You can use a wiki in Neovim to:

- organize notes and ideas
- manage to-do lists
- write documentation
- write blog posts to publish using Hugo or Astro


=============================================================================
Features  						 *kiwi.nvim-features*

kiwi.nvim has the following features:

- Quick access to wiki-index
- Manage multiple wikis
- Easily create new wiki files
- Follow links
- Jump through links using tab
- Manage todolists
- Toggle checkboxes

=============================================================================
Usage 							*kiwi.nvim-usage*

Opening a wiki
--------------

Open the wiki by calling the `require('kiwi').open_wiki_index` function, which
is usually mapped to a personal shortkey like `<Leader>ww`. This will open
your index wiki file. By default, the index is located in `~/wiki/index.md`. 


Creating hyperlinks and new wiki pages
--------------------------------------

When you select one or more words in visual mode, you can create a new wiki
file by hitting enter. When a file already exists with those words with the
extension `.md`, this file will be opened in a new buffer.

If a file does not exist in the wiki folder with this name, a new document
will be opened in the new buffer with the selected word(s) as the name of the
new markdown-file.

In any wiki file, links to other files can be created by making a link using
the relative path. 

To create subwikis you can add subdirectories in your wiki folder and link to
files there.


Moving around
-------------

You can jump to the next hyperlink in the current file by pressing `tab`, by
pressing `enter`, the file it refers to will be opened.

To quickly return to the file from which you followed the hyperlink, you can use
the standard vim key `<ctrl-o>`.


Managing todo items 					*kiwi.nvim-todo*
-------------------

Kiwi supports managing todo items. You can change tasks and subtasks by
indented list of items starting with `[ ]`. Kiwi also supports the markdown
format with bullet items. For instance:

- [ ] main task
    - [ ] subtask 1
    - [x] subtask 2
    - [ ] subtask 3
- [x] other task
- [ ] last task

By calling the `require('kiwi').todo.toggle()` function, which you can map to
for instance  `T` in normal mode, you can toggle an individual task or
subtask. Kiwi will also check if there are related tasks. When you change the
state of a main task, all subtasks will also be changed. Also, when you mark
all subtasks as done, the main task will also be checked.


=============================================================================
Settings and configuration      *kiwi.nvim-settings* *kiwi.nvim-configuration*

By default kiwi.nvim will make a wiki in your user home directory in 

  ~/wiki/index.md

You can set up a custom path to your wikis. But keep in mind that these will
be created within the user home directory. You can name your wiki and assign
it to a path. Every wiki has a unique name. You can also assign several names
to the same location. This can be useful to set up the same wiki on both your
workmachine using Windows and using Linux at home. 

This is an example:

  -- Setup Custom wiki path if required
  require('kiwi').setup({
    {
        name = "work",
        path = "work-wiki"
    },
    {
        name = "personal",
        path = "personal-wiki"
    }
  })
  
Recommended settings
--------------------

To make links more readable it is recommended to use Treesitter for markdown
syntax and enable concealing in your init.lua file:

  `vim.opt.conceallevel = 2`

=============================================================================
Keymappings 	  			*kiwi.nvim-keys* *kiwi.nvim-keymaps*

Personal keymappings
--------------------

kiwi.nvim does not set personal keymappings by default, you will have to set
them in your init.lua, or define them using a plugin. We recommend a mapping
for quickly opening the wiki-index of every wiki and a shortcut key for
toggling the status of a task.

These examples can be set in your personal configuration:

To choose from a list which wiki to open:

  `vim.keymap.set('n', '<leader>ww', "<cmd>lua require(\'kiwi\').open_wiki_index()<cr>")`

To open a specific wiki, named 'personal':

  `vim.keymap.set('n', '<leader>wp', "<cmd>lua require(\'kiwi\').open_wiki_index(\'personal\')<cr>")`

To toggle the state of a checkbox:

  `vim.keymap.set('n', '<leader>x', require('kiwi').todo.toggle, {})`


General keymappings
-------------------

When opening your personal wiki, the following keybindings are available: 

In normal mode:
  <Tab> 	  -- Find next wiki link.
  <Enter> 	  -- Follow wiki link.

In visual mode:
  <Enter> 	  -- Folow or create wiki link 



=============================================================================
Installation					     *kiwi.nvim-installation*

Installation of kiwi.nvim is possible with the packages functionality, copied 
to the standard application folders, or using a plugin manager. Please see the
README file for details and examples.


vim:tw=78:ts=8:noet:ft=help:norl:
